spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/green-note?currentSchema=logs
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASS:postgres}

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
# let springboot choose port
server.port=0
# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://${DISCOVERY_SERVER_USERNAME:eureka}:${DISCOVERY_SERVER_PASSWORD:password}@${DISCOVERY_HOST:localhost}:${DISCOVERY_SERVER_PORT:8088}/eureka
eureka.instance.leaseRenewalIntervalInSeconds=5
spring.application.name=logging-service
# Actuator config
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Kafka brokers -- specify kafka brokers -> use comma to separate broker urls
spring.kafka.consumer.bootstrap-servers=http://${KAFKA_HOST:localhost}:${KAFKA_BROKER_PORT:9092}

spring.kafka.consumer.group-id=log
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.topic.logging.name=log
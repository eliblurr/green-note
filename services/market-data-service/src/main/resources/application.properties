# let springboot choose port
server.port=0
# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://${DISCOVERY_SERVER_USERNAME:eureka}:${DISCOVERY_SERVER_PASSWORD:password}@${DISCOVERY_HOST:localhost}:${DISCOVERY_SERVER_PORT:8088}/eureka
eureka.instance.leaseRenewalIntervalInSeconds=5
spring.application.name=market-data-service

# Kafka brokers -- specify kafka brokers -> use comma to separate broker urls
spring.kafka.producer.bootstrap-servers=http://${KAFKA_HOST:localhost}:${KAFKA_BROKER_PORT:9092}

# producer serializer schemes
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Redis Configuration
redis.host=${REDIS_HOST:localhost}
redis.port=${REDIS_PORT:6379}

# create/configure topic
spring.kafka.topic.reporting.name=reportTopic 
# updateLegTopic
spring.kafka.topic.ordering.name=orderTopic
spring.kafka.topic.notification.order.name=orderNotifyTopic
spring.kafka.topic.notification.trade.name=tradeNotifyTopic

# app secret
app.secret=${APP_SECRET:somesecrettext}

# jwt
auth.jwt.secret=${APP_SECRET:somesecrettext}
auth.jwt.expiration.in.minutes=${JWT_EXPIRATION_IN_MINUTES:200}
auth.refresh.jwt.expiration.in.minutes=${JWT_REFRESH_EXPIRATION_IN_MINUTES:2000}